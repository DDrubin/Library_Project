
@model Tuple<Library.Models.Book, Library.Models.BookReservation>
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Register";
}

<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(tuple => tuple.Item1.Name)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(tuple => tuple.Item1.Name)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(tuple => tuple.Item1.Author)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(tuple => tuple.Item1.Author)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(tuple => tuple.Item1.PublishDate)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(tuple => tuple.Item1.PublishDate)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(tuple => tuple.Item1.Description)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(tuple => tuple.Item1.Description)
    </dd>
</dl>


<div class="col-md-4">
    <form asp-action="Register">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        
        <div class="form-group">
            <label asp-for="Item2.BookID" class="control-label"></label>
            
            <input asp-for="Item2.BookID" class="form-control" type="hidden" value="@Model.Item1.Id" >
            <span asp-validation-for="Item2.BookID" class="text-danger"></span>
        </div>
        
        <div class="form-group">

            <input type="submit" value="Register" class="btn btn-primary" />
        </div>
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

